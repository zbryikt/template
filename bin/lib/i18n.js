// Generated by LiveScript 1.6.0
var chokidar, i18next, i18nextFsBackend, i18nextHttpMiddleware, ret;
chokidar = require('chokidar');
i18next = require('i18next');
i18nextFsBackend = require('i18next-fs-backend');
i18nextHttpMiddleware = require('i18next-http-middleware');
ret = function(opt){
  var options;
  if (!opt || (opt.enabled != null && !opt.enabled)) {
    return Promise.resolve();
  }
  options = import$({
    lng: ['zh-TW'],
    fallbackLng: 'zh-TW',
    preload: ['zh-TW'],
    ns: 'default',
    defaultNS: 'default',
    fallbackNS: 'default',
    initImmediate: false,
    backend: {
      loadPath: 'locales/{{lng}}/{{ns}}.yaml'
    }
  }, opt || {});
  return i18next.use(i18nextFsBackend).use(i18nextHttpMiddleware.LanguageDetector).init(options).then(function(){
    var watcher;
    watcher = chokidar.watch(['locales'], {
      persistent: true,
      ignored: function(f){
        return /\/\./.exec(f);
      }
    });
    watcher.on('add', function(){
      return i18next.reloadResources(options.lng);
    }).on('change', function(){
      return i18next.reloadResources(options.lng);
    }).on('unlink', function(){
      return i18next.reloadResources(options.lng);
    });
    return i18next;
  });
};
module.exports = ret;
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}