// Generated by LiveScript 1.3.1
(function(){
  var express, path, colors, i18nextHttpMiddleware, view, i18n, server;
  express = require('express');
  path = require('path');
  colors = require('colors');
  i18nextHttpMiddleware = require('i18next-http-middleware');
  view = require('./view');
  i18n = require('./i18n');
  server = {
    init: function(opt){
      var this$ = this;
      return i18n(opt).then(function(i18n){
        var app, cwd, server;
        this$.app = app = express();
        cwd = process.cwd();
        opt.i18n = i18n;
        app.use(i18nextHttpMiddleware.handle(i18n, {
          ignoreRoutes: []
        }));
        view.opt(opt);
        app.engine('pug', view);
        app.set('view engine', 'pug');
        app.set('views', path.join(cwd, './src/pug/'));
        app.locals.viewdir = path.join(cwd, './.view/');
        app.locals.basedir = app.get('views');
        app.set('view engine', 'pug');
        if (opt.api) {
          opt.api(this$);
        }
        app.use('/', express['static']('static'));
        console.log(("[Server] Express Initialized in " + app.get('env') + " Mode").green);
        return server = app.listen(opt.port, function(){
          var delta;
          delta = opt.startTime ? "( takes " + (Date.now() - opt.startTime) + "ms )" : '';
          return console.log(("[SERVER] listening on port " + server.address().port + " " + delta).cyan);
        });
      });
    }
  };
  module.exports = server;
}).call(this);
