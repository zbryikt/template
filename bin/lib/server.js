// Generated by LiveScript 1.6.0
var express, path, colors, i18nextHttpMiddleware, open, view, i18n, server;
express = require('express');
path = require('path');
colors = require('colors');
i18nextHttpMiddleware = require('i18next-http-middleware');
open = require('open');
view = require('./view');
i18n = require('./i18n');
server = {
  init: function(opt){
    var this$ = this;
    opt == null && (opt = {});
    return i18n(opt.i18n).then(function(i18n){
      var app, cwd, server;
      this$.app = app = express();
      cwd = process.cwd();
      if (i18n) {
        app.use(i18nextHttpMiddleware.handle(i18n, {
          ignoreRoutes: []
        }));
      }
      view.opt({
        i18n: i18n
      });
      app.engine('pug', view);
      app.set('view engine', 'pug');
      app.set('views', path.join(cwd, './src/pug/'));
      app.locals.viewdir = path.join(cwd, './.view/');
      app.locals.basedir = app.get('views');
      app.set('view engine', 'pug');
      if (opt.api) {
        opt.api(this$);
      }
      app.use('/', express['static']('static'));
      console.log(("[Server] Express Initialized in " + app.get('env') + " Mode").green);
      return server = app.listen(opt.port, function(){
        var delta;
        delta = opt.startTime ? "( takes " + (Date.now() - opt.startTime) + "ms )" : '';
        console.log(("[SERVER] listening on port " + server.address().port + " " + delta).cyan);
        if (opt.open) {
          return open("http://localhost:" + server.address().port);
        }
      });
    });
  }
};
module.exports = server;