#!/usr/bin/env node
// Generated by LiveScript 1.6.0
var t1, fs, path, yargs, lib, server, watch, api, cfgfile, argv, root, doOpen, main, config;
t1 = Date.now();
fs = require('fs');
path = require('path');
yargs = require('yargs');
lib = path.dirname(fs.realpathSync(__filename));
server = require(lib + "/lib/server");
watch = require(lib + "/lib/watch");
api = require(lib + "/api/index");
if (/\.json$/.exec(process.argv[2] || '')) {
  cfgfile = process.argv[2];
} else {
  argv = yargs.option('root', {
    alias: 'r',
    description: "root directory",
    type: 'string'
  }).option('config', {
    alias: 'c',
    description: "config json",
    type: 'string'
  }).option('open', {
    alias: 'o',
    description: "open browser on startup",
    type: 'bool'
  }).help('help').alias('help', 'h').check(function(argv, options){
    return true;
  }).argv;
  root = argv.r;
  cfgfile = argv.c || 'config.json';
  doOpen = argv.o;
}
if (!cfgfile) {
  cfgfile = 'config.json';
}
main = {
  opt: {
    api: api,
    startTime: t1
  },
  setOpt: function(o){
    return import$(this.opt, o);
  },
  init: function(){
    server.init(this.opt);
    return watch.init(this.opt);
  }
};
if (require.main === module) {
  if (fs.existsSync(cfgfile)) {
    config = JSON.parse(fs.readFileSync(cfgfile).toString());
    main.setOpt(config);
  }
  if (doOpen != null) {
    main.setOpt({
      open: doOpen
    });
  }
  if (root != null) {
    process.chdir(root);
  }
  main.init();
}
module.exports = main;
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
